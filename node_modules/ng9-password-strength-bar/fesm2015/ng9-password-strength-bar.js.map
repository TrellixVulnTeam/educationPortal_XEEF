{"version":3,"file":"ng9-password-strength-bar.js","sources":["../../../projects/ng9-password-strength-bar/src/lib/ng9-password-strength-bar.component.ts","../../../projects/ng9-password-strength-bar/src/lib/ng9-password-strength-bar.module.ts","../../../projects/ng9-password-strength-bar/src/public-api.ts","../../../projects/ng9-password-strength-bar/src/ng9-password-strength-bar.ts"],"sourcesContent":["import { Component, OnChanges, Input, SimpleChange, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ng9-password-strength-bar',\n  styles: [`\n    .strengthBar {\n      display: inline;\n      list-style: none;\n      margin: 0 0 0 15px;\n      padding: 0;\n      vertical-align: 2px;\n    }\n\n    .strengthBar .point {\n      background: #DDD;\n      border-radius: 2px;\n      display: inline-block;\n      height: 5px;\n      margin-right: 1px;\n      width: 20px;\n    }\n\n    .strengthBar .point:last-child {\n      margin: 0;\n    }\n    .pre {\n      white-space: pre;\n    }\n  `],\n  template: `\n    <div id=\"strength\" #strength>\n      <small>{{barLabel}}</small>\n      <ul id=\"strengthBar\" class=\"strengthBar\">\n        <li id=\"bar0\" class=\"point\" [style.background-color]=\"bar0\"></li>\n        <li class=\"point\" [style.background-color]=\"bar1\"></li>\n        <li class=\"point\" [style.background-color]=\"bar2\"></li>\n        <li class=\"point\" [style.background-color]=\"bar3\"></li>\n        <li class=\"point\" [style.background-color]=\"bar4\"></li>\n      </ul>\n      <small [hidden]=\"!strengths\" class=\"pre\">  {{strengthLabel}}</small>\n    </div>\n  `\n})\nexport class Ng9PasswordStrengthBarComponent implements OnChanges {\n  @Input() passwordToCheck: string;\n  @Input() barLabel: string;\n  @Input() barColors: Array<string>;\n  @Input() baseColor: string;\n  @Input() strengthLabels: Array<string>;\n  @Input() customThresholds: Array<number>;\n  @Output() onStrengthChanged: EventEmitter<number> = new EventEmitter<number>();\n\n  bar0: string;\n  bar1: string;\n  bar2: string;\n  bar3: string;\n  bar4: string;\n\n  strengthLabel: string;\n\n  private colors: Array<string>;\n  private thresholds: Array<number>;\n  strengths: Array<string>;\n  private defaultColors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\n  private defaultThresholds = [90, 70, 40, 20];\n  private defaultBaseColor = '#DDD';\n\n  private static measureStrength(pass: string) {\n    let score = 0;\n    // award every unique letter until 5 repetitions\n    const letters = {};\n    for (let i = 0; i < pass.length; i++) {\n      letters[pass[i]] = (letters[pass[i]] || 0) + 1;\n      score += 5.0 / letters[pass[i]];\n    }\n    // bonus points for mixing it up\n    const variations = {\n      digits: /\\d/.test(pass),\n      lower: /[a-z]/.test(pass),\n      upper: /[A-Z]/.test(pass),\n      nonWords: /\\W/.test(pass),\n    };\n\n    let variationCount = 0;\n    for (let check in variations) {\n      variationCount += (variations[check]) ? 1 : 0;\n    }\n    score += (variationCount - 1) * 10;\n    return Math.trunc(score);\n  }\n\n  constructor() {\n    this.colors = this.defaultColors;\n    this.thresholds = this.defaultThresholds;\n  }\n\n  private checkBarColors(): void {\n    // Accept custom colors if input is valid, otherwise the default colors will be used\n    if (this.barColors && this.barColors.length === 5) {\n      this.colors = this.barColors.slice();\n    } else {\n      this.colors = this.defaultColors;\n    }\n\n    this.strengths = this.strengthLabels && this.strengthLabels.length === 5 ? this.strengthLabels.slice() : null;\n    this.setStrengthLabel(0);\n\n    if (!/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(this.baseColor)) {\n      this.baseColor = this.defaultBaseColor;\n    }\n  }\n\n  private checkThresholds(): void {\n    if (this.customThresholds && this.customThresholds.length === 4) {\n      this.thresholds = this.customThresholds.slice();\n    } else {\n      this.thresholds = this.defaultThresholds;\n    }\n  }\n\n  private getColor(score: number) {\n    let idx = 0;\n    if (score > this.thresholds[0]) {\n      idx = 4;\n    } else if (score > this.thresholds[1]) {\n      idx = 3;\n    } else if (score >= this.thresholds[2]) {\n      idx = 2;\n    } else if (score >= this.thresholds[3]) {\n      idx = 1;\n    }\n    return {\n      idx: idx + 1,\n      col: this.colors[idx]\n    };\n  }\n\n  getStrengthIndexAndColor(password: string) {\n    return this.getColor(Ng9PasswordStrengthBarComponent.measureStrength(password));\n  }\n\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!changes['passwordToCheck']) {\n      return;\n    }\n    const password = changes['passwordToCheck'].currentValue;\n    this.checkBarColors();\n    this.checkThresholds();\n    this.setBarColors(5, this.baseColor);\n    let strength = 0;\n    if (password) {\n      const c = this.getStrengthIndexAndColor(password);\n      strength = c.idx - 1;\n      this.setStrengthLabel(strength);\n      this.setBarColors(c.idx, c.col);\n    }\n    this.onStrengthChanged.emit(strength);\n  }\n\n  private setBarColors(count: number, col: string) {\n    for (let _n = 0; _n < count; _n++) {\n      this['bar' + _n] = col;\n    }\n  }\n  private setStrengthLabel(index: number) {\n    if (this.strengths) {\n      this.strengthLabel = this.strengths[index];\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Ng9PasswordStrengthBarComponent } from './ng9-password-strength-bar.component';\n\n\n\n@NgModule({\n  declarations: [Ng9PasswordStrengthBarComponent],\n  imports: [\n  ],\n  exports: [Ng9PasswordStrengthBarComponent]\n})\nexport class Ng9PasswordStrengthBarModule { }\n","/*\n * Public API Surface of ng9-password-strength-bar\n */\n\nexport * from './lib/ng9-password-strength-bar.component';\nexport * from './lib/ng9-password-strength-bar.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}